# Generated by Django 4.1.7 on 2023-07-23 14:00

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(error_messages={'blank': 'Name field cannot be blank.', 'null': 'Name field cannot be null.'}, max_length=20, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(20)], verbose_name='Name')),
                ('email', models.EmailField(error_messages={'blank': 'Email field cannot be blank.', 'null': 'Email field cannot be null.', 'unique': 'This email is already registered.'}, max_length=254, unique=True, verbose_name='Email')),
                ('lastName', models.CharField(default='lastName', max_length=20, verbose_name='Last Name')),
                ('location', models.CharField(default='my city', max_length=20, verbose_name='Location')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=50, verbose_name='Company')),
                ('position', models.CharField(max_length=100, verbose_name='Position')),
                ('status', models.CharField(choices=[('interview', 'Interview'), ('declined', 'Declined'), ('pending', 'Pending')], default='pending', max_length=20, verbose_name='Status')),
                ('jobType', models.CharField(choices=[('full-time', 'Full-time'), ('part-time', 'Part-time'), ('remote', 'Remote'), ('internship', 'Internship')], default='full-time', max_length=20, verbose_name='Job Type')),
                ('jobLocation', models.CharField(default='my city', max_length=100, verbose_name='Job Location')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('createdBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name_plural': 'Jobs',
            },
        ),
    ]
